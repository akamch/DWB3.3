'''	\"               Copyright c 1990 AT&T
'''	\"                All Rights Reserved
'''	\" THIS DOCUMENT CONTAINS PROPRIETARY INFORMATION OF
'''	\" AT&T AND IS NOT TO BE DISCLOSED OR USED EXCEPT IN
'''	\"      ACCORDANCE WITH APPLICABLE AGREEMENTS.
'''	\"
.so ../defs.doc
.so defs.pguide
.ds pT Picasso
.aP A "PIC Incompatibilities"
Despite efforts to maintain compatibility,
.I Picasso
will have problems with
some pictures described in the older
.I pic
language.
The gimmick for promoting compatibility is the statement:
.iS
reset p_i_c
.iE
right after the
.cR .PS .
This will be ignored by
.IR pic ;
.I Picasso
will recognize it as
a request to faithfully duplicate
.I pic ,
warts and all.
.P
The known differences are listed below:
.BL
.LI
The first coordinate after a
.cR .PS
gives the \f2vertical\f1 size
(and the second gives horizontal size) for the picture;
.I pic
used the reverse convention.
.I Picasso
follows the syntax of the
.cR .BP
picture
inclusion macros.
.LI
A
.I Picasso
picture is centered on the page (or in the prescribed space if
vertical and/or horizontal sizes are given) and not justified to the upper
left corner.
.LI
The
.I pic
.cR scale
variable has been replaced by the use of
.cR scale
as a keyword supporting the general transformations available in
.IR Picasso .
.I Picasso 
attempts to handle
.cR scale
=
.I r
statements to give results
similar to
.IR pic .
.ig
INTERNAL ONLY:
Be especially wary of files generated by \f5cip\fP and \f5xcip\fP.
..
.LI
The
.I pic
.cR textwid
and
.cR textht
variables do not exist in
.I Picasso .
Explicit widths and heights may be set as attributes for a text item;
otherwise, its dimensions are computed from standard
.I troff
font tables.
.LI
The
.I pic
.cR arrowhead
variable (number of lines drawn to simulate
a filled head on an arrow) has been replaced by the
.I Picasso
.cR arrowfill
variable.
For many existing
.I pic
programs, a simple edit of
.cR arrowhead
to
.cR arrowfill
will give reasonable results.
.I Picasso
takes any odd value of this variable to imply fill, any even value
to mean just draw the edges of the arrowhead.
.LI
.I Picasso
will accept
.cR invis
as a synonym for
.cR noedge .
(Since objects with this property may be filled, they cannot properly
be called invisible.)
.LI
.I Picasso
has more keywords than
.IR pic ;
for example,
defining a macro called
.cR space
or
.cR ln
works fine in
.I pic
but gives
.I Picasso
fits.
The complete list of
.I Picasso
lexical items is given in Appendices B and C.
.LI
.I Picasso
consistently associates labels with the
centers of objects;
.I pic
has different rules
for text and lines than for other objects.
.cR "reset\ p_i_c"
attempts to compensate for this.
.LI
When invoking total picture scaling (argument on
.cR .PS )
.I Picasso
allows PostScript to do the scaling; accordingly,
\f2everything\fP (text included) is scaled.
.I Pic
only scales those things it knows about, which doesn't
include text.
.LI
.I Pic
associates compass coordinates with points on the
circumference of a circle;
.I Picasso
uses the bounding box.
.I Picasso
offers an alternate method (``corner numbering'')
to identify points on the circumference.
Again,
.cR "reset p_i_c"
will force
.IR pic -like
behavior.
.LI
As a general warning: clever use of
.I troff
in the midst of
.I pic
descriptions
will likely cause
.I Picasso
great confusion.
Stick to size and font changes and you'll be safe.
.LE
