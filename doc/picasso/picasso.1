.TH PICASSO 1
.SH NAME
picasso \- a line drawing program
.SH SYNOPSIS
\f3picasso  [ \-b\f2size\fP \-F\f2path\fP \-I\f2path\fP \-l\f2n\fP \-M\f2n\fP \-m\f2margin\fP \-p\f2m\fPx\f2n\fP \-t \-x ]  [ \- ]  [ \f2file_name\^(s)\fP ]
.ft 1
.SH DESCRIPTION
.B Picasso
is a
processor for a PIC-like drawing language that produces PostScript output.
By default, this output is scaled to fit an 8-1/2 by 11 inch print area, and
centered on the page.
.PP
.B \-b
.IR size
specifies a buffer of \f2size\f1 objects accumulated before translation
into PostScript;
on machines with small memories, a buffer of a few thousand objects 
can prevent thrashing when processing a very large picture.
This option is for exceptional cases and is not often needed.
.PP
.B \-F
.IR path
overrides the standard path for font width tables.
The default is to use the \fBtroff(1)\fP tables.
.PP
.B \-I
.IR path
overrides the standard path for the PostScript prologue
and font descriptions (not needed in normal use).
.PP
.B \-l
.IR n
processes layer \f2n\f1 only, as specified by \f(CWcurlayer=\f2n\fP.
.PP
.B \-M
.IR n
magnifies the output image by \f2n\f1 (shrinks if 0 < \f2n\fP < 1).
.PP
.B \-p
.IR m\f3x\fPn
.ft 1
specifies output device size in inches (8.5x11 default).
.PP
.B \-t
packages the PostScript with surrounding troff input so that the
output file may be passed down a pipeline to
.BR troff (1).
The
.B mpictures
macro package can be used with
.B troff
to insert the pictures appropriately within the document.
Without the flag
.B Picasso
outputs \fIonly\fR PostScript, dropping any text outside the markers
(\f(CW.PS\fP and \f(CW.PE\fP) delimiting each picture.
.PP
.B \-m
.IR margin
specifies an empty border, in printer's points, that
.B Picasso
will place around each picture.
This may be useful at times to prevent too tight clipping against
adjacent text or the edge of the paper.
By default no margin is supplied;
to cause a 1/8" (9 point) margin, for example, specify
.BR \-m9 .
.PP
.B \-x
suppresses the default scaling and centering.
.PP
The
.B Picasso
picture description language is object oriented, the basic objects being
.ft CW
arrow, arc, box, circle, ellipse, line, sector, spline
.ft 1
and (quoted) text.
These can be combined, hierarchically, into \f(CWblocks\fP.
Primitive objects can be drawn with
.ft CW
solid, dashed, dotted\fR or \fPnoedge
.ft 1
edges.
These edges may be of varying \f(CWweight\fP (thickness)
and of any shade of gray (from black = 0 to white = 1) or color.
Predefined colors include
.ft CW
black, white, red, blue, cyan, magenta, yellow.
.ft 1
.PP
Objects may be named and referred to by name or by anonymous
references such as
.ft CW
1st box, 4th object, 2nd last circle.
.ft 1
Object names require an initial upper case letter;
names beginning with lower case or an underscore are numeric variables.
There are predefined variables for most properties, including:
.ft CW
circlerad, boxwid, linecolor.
.ft 1
.B Picasso
provides a limited set of programming language constructs
(loops, if statements, macros, arithmetic)
for combining simple objects into complex pictures. 
.PP
By default, objects are placed on the page adjacent to each other
and from left to right.
The default direction may be changed, and any object can be placed \f(CWat\fP
a specific postion,
given either in absolute coordinates or by reference to other objects and
points of interest.
Any object has a
.ft CW
top, bottom, left, right
.ft 1
point;
these points may also be refered to directionally as
.ft CW
north, south, west, east\fR or \fPn, s, w, e.
.ft 1
The ``corner'' points may also be specified,
.IR e.g. ,
.ft CW
northwest, nw.
.ft 1
Lines have \f(CWstart\fP and \f(CWend\fP
points;
you may also refer to \f(CW1st, 2nd, ..., nth\fP
points along a line.
Boxes, circles, and ellipses have eight predefined points corresponding
to the directional references mentioned above, the first point being in
the eastern direction and the 8th point towards the southeast.
For any object, the ``corner'' points really lie on the corners of a box
surrounding the object while the ``counted'' points lie on the object itself.
This distinction is normally relevant only for circles and ellipses, but
since an object can be rotated or otherwise transformed it occasionally
has significance for other objects as well.
.SH EXAMPLE
The following is a simple no-smoking sign described in the
.B Picasso
language.
.sp .5
.in +.5i
.ft CW
.nf
 .PS
 d = 0.5
 [ box ht d wid 3.5 weight d/20
   box ht d wid d/2 filled 0.5 noedge
   spline weight 0.2 edge .75 right d then up d \\
                         then right d then up d
 ] 
 linecolor = red; lineweight = 0.375
 circle rad 3 at last block
 line from last circle .4th to last circle .8th
 .PE
.in -.5i
.fi
.ft R
.sp .5
If this is used in a
.B troff
document and processed through
.B Picasso
with the \f(CW-t\fR
flag, the \f(CW.PS\fP marking the start of the picture can specify the size and
placement of the picture at that point in your document.
For example, to place the no smoking sign centered on the page in a 3
inch square area, flag the start of the picture with\f(CW .PS 3 3 c\fR.
.SH "SEE ALSO"
.BR troff (1),
.BR troff (5)
.SH REFERENCE
.I \s-1MPICTURES\s+1\(emA Picture Inclusion Package
.br
.I PIC\(emA Graphics Language for Typesetting
.br
.I
Picasso\(emAn OPEN LOOK Drawing Program
.ft P
.\"	@(#)picasso.1	1.0 of 1/4/84
.SH BUGS
.B Picasso
is not completely compatible with
.BR pic (1) ,
although the statement \f(CWreset p_i_c\fP right after a \f(CW.PS\fP
will compensate for most differences.
Besides having a number of new keywords and predefined variable names,
.B Picasso
also centers pictures on a page rather than placing them at upper left.
Under no circumstances will it work with non-PostScript devices.
.P
The positioning of equations may be slightly different than that of
.BR pic (1) .
.P
Interactive
.BR Picasso
has its own unique set of bugs:
.P
It is unable to generate many elements
of the language, nor will it preserve such elements (e.g., loops)
if they are read in then written out.
.P
If you try various non-compatible grid sizes, your objects will
hop around and even scale slightly in a vain effort to remain aligned.
This is due to the low resolution of the screen, and doesn't affect printer output.
.P
Transformed text may be replaced by a weird box on-screen; it should
appear correctly on the printer.
This is an X Window System feature.
.P
Changes to \fBProperties\fP cannot be \fBUndone\fP; use the \fBProperties\fP menu again.
.P
When saving \fBConfiguration\fP files, line styles and dimensions
of round-cornered boxes are not saved, nor is text alignment default.
.P
``Handles'' are sometimes left behind; \fBRefresh\fP cures this.
.P
Very large arrow heads on arcs are often misplaced after reflection.
.P
If you leave ``draw mode'' surreptitiously, an icon will remain highlighted.
